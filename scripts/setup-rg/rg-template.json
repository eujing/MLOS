{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "projectPrefix": {
            "type": "string",
            "metadata": {
                "description": "Prefix used for naming resources."
            },
            "defaultValue": "mlos"
        },
        "vmSKU": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "VM SKU"
            }
        },
        "vmAdminUsername": {
            "type": "string"
        },
        "sshPublicKey": {
            "type": "string"
        },
        "fileShareName": {
            "type": "string",
            "defaultValue": "mlos-file-share"
        },
        "resultsDbName": {
            "type": "string"
        },
        "resultsDbAdminUsername": {
            "type": "string",
            "defaultValue": "mlos"
        },
        "resultsDbAdminPassword": {
            "type": "securestring"
        }
    },
    "functions": [],
    "variables": {
        "storageAccountName": "[toLower(concat(replace(parameters('projectPrefix'), '-', ''), 'storage'))]",
        "vmName": "[concat(parameters('projectPrefix'), '-vm')]",
        "networkInterfaceName": "[concat(variables('vmName'), '-ni-', uniqueString(resourceGroup().id))]",
        "vnetName": "[concat(variables('vmName'), '-vnet')]",
        "publicIpName": "[concat(variables('vmName'), '-ip')]",
        "nsgName": "[concat(variables('vmName'), '-nsg')]",
        "kvName": "[concat(parameters('projectPrefix'), '-kv')]"
    },
    "resources": [
        {
        "name": "[variables('publicIpName')]",
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2020-11-01",
        "location": "[resourceGroup().location]",
        "tags": {
            "displayName": "PublicIPAddress"
        },
        "properties": {
            "publicIPAllocationMethod": "Static",
            "dnsSettings": {
                "domainNameLabel": "[variables('vmName')]"
            }
        }
    },
    {
        "name": "[variables('nsgName')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2020-11-01",
        "location": "[resourceGroup().location]",
        "properties": {
            "securityRules": [
                {
                    "name": "CorpSSH",
                    "properties": {
                        "description": "Corp. IP SSH access",
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "22",
                        "sourceAddressPrefix": "131.107.0.0/16",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 100,
                        "direction": "Inbound"
                    }
                }
            ]
        }
    },
    {
        "name": "[variables('vnetName')]",
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-11-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
        ],
        "tags": {
            "displayName": "[variables('vnetName')]"
        },
        "properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "10.0.0.0/16"
                ]
            },
            "subnets": [
                {
                    "name": "default",
                    "properties": {
                        "addressPrefix": "10.0.0.0/24",
                        "serviceEndpoints": [
                            {
                                "service": "Microsoft.Storage",
                                "locations": ["[resourceGroup().location]"]
                            },
                            {
                                "service": "Microsoft.KeyVault",
                                "locations": ["[resourceGroup().location]"]
                            }
                        ],
                        "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                        }
                    }
                }
            ]
        }
    },
    {
        "name": "[variables('networkInterfaceName')]",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2020-11-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]",
            "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
            "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
        ],
        "tags": {
            "displayName": "ubuntuVM1-NetworkInterface"
        },
        "properties": {
            "ipConfigurations": [
                {
                    "name": "ipConfig1",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "publicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                        },
                        "subnet": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default')]"
                        }
                    }
                }
            ],
            "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            }
        }
    },
    {
        "name": "[variables('kvName')]",
        "type": "Microsoft.KeyVault/vaults",
        "apiVersion": "2019-09-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
        ],
        "tags": {
            "displayName": "[variables('kvName')]"
        },
        "properties": {
            "enabledForDeployment": true,
            "enabledForTemplateDeployment": true,
            "enabledForDiskEncryption": true,
            "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
            "accessPolicies": [],
            "enableRbacAuthorization": true,
            "networkAcls": {
                "virtualNetworkRules": [
                    {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default')]",
                        "ignoreMissingVnetServiceEndpoint": false
                    }
                ]
            },
            "sku": {
                "name": "standard",
                "family": "A"
            }
        }
    },
    {
        "name": "[variables('vmName')]",
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2021-03-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
        ],
        "tags": {
            "displayName": "[variables('vmName')]"
        },
        "properties": {
            "hardwareProfile": {
                "vmSize": "[parameters('vmSKU')]"
            },
            "osProfile": {
                "computerName": "[variables('vmName')]",
                "adminUsername": "[parameters('vmAdminUsername')]",
                "linuxConfiguration": {
                    "disablePasswordAuthentication": true,
                    "ssh": {
                        "publicKeys": [
                            {
                                "path": "[concat('/home/', parameters('vmAdminUsername'), '/.ssh/authorized_keys')]",
                                "keyData": "[parameters('sshPublicKey')]"
                            }
                        ]
                    }
                }
            },
            "storageProfile": {
                "imageReference": {
                    "publisher": "Canonical",
                    "offer": "0001-com-ubuntu-server-jammy",
                    "sku": "22_04-lts-gen2",
                    "version": "latest"
                },
                "osDisk": {
                    "name": "[concat(variables('vmName'), '-OsDisk')]",
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                }
            },
            "networkProfile": {
                "networkInterfaces": [
                    {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                    }
                ]
            },
            "diagnosticsProfile": {
                "bootDiagnostics": {
                    "enabled": false
                }
            }
        }
    },
    {
        "name": "[variables('storageAccountName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2021-04-01",
        "tags": {
            "displayName": "[variables('storageAccountName')]"
        },
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
        ],
        "kind": "StorageV2",
        "sku": {
            "name": "Standard_LRS",
            "tier": "Standard"
        },
        "properties": {
            "networkAcls": {
                "bypass": "AzureServices",
                "virtualNetworkRules": [
                    {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default')]",
                        "action": "Allow"
                    }
                ],
                "ipRules": [],
                "defaultAction": "Deny"
            }
        }
    },
    {
        "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
        "apiVersion": "2022-09-01",
        "name": "[concat(variables('storageAccountName'), '/default/', parameters('fileShareName'))]",
        "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
        ],
        "properties": {
            "accessTier": "TransactionOptimized",
            "shareQuota": 5120,
            "enabledProtocols": "SMB"
        }
    },
    {
        "type": "Microsoft.DBforMySQL/flexibleServers",
        "apiVersion": "2021-12-01-preview",
        "name": "[parameters('resultsDbName')]",
        "location": "[resourceGroup().location]",
        "sku": {
            "name": "Standard_B1s",
            "tier": "Burstable"
        },
        "properties": {
            "administratorLogin": "[parameters('resultsDbAdminUsername')]",
            "administratorLoginPassword": "[parameters('resultsDbAdminPassword')]",
            "storage": {
                "storageSizeGB": 20,
                "iops": 360,
                "autoGrow": "Enabled",
                "autoIoScaling": "Disabled",
                "logOnDisk": "Disabled"
            },
            "version": "8.0.21",
            "network": {
                "publicNetworkAccess": "Enabled"
            },
            "backup": {
                "backupRetentionDays": 7,
                "geoRedundantBackup": "Disabled"
            },
            "highAvailability": {
                "mode": "Disabled"
            }
        }
    },
    {
        "type": "Microsoft.DBforMySQL/flexibleServers/databases",
        "apiVersion": "2021-12-01-preview",
        "name": "[concat(parameters('resultsDbName'), '/mlos')]",
        "dependsOn": [
            "[resourceId('Microsoft.DBforMySQL/flexibleServers', parameters('resultsDbName'))]"
        ],
        "properties": {
            "charset": "utf8",
            "collation": "utf8_general_ci"
        }
    },
    {
        "type": "Microsoft.DBforMySQL/flexibleServers/firewallRules",
        "apiVersion": "2021-12-01-preview",
        "name": "[concat(parameters('resultsDbName'), '/CorpIps')]",
        "dependsOn": [
            "[resourceId('Microsoft.DBforMySQL/flexibleServers', parameters('resultsDbName'))]"
        ],
        "properties": {
            "startIpAddress": "131.107.0.0",
            "endIpAddress": "131.107.255.255"
        }
    },
    {
        "type": "Microsoft.DBforMySQL/flexibleServers/firewallRules",
        "apiVersion": "2021-12-01-preview",
        "name": "[concat(parameters('resultsDbName'), '/AllowVM-', variables('vmName'))]",
        "dependsOn": [
            "[resourceId('Microsoft.DBforMySQL/flexibleServers', parameters('resultsDbName'))]",
            "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]",
            "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
        ],
        "properties": {
            "startIpAddress": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))).ipAddress]",
            "endIpAddress": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))).ipAddress]"
        }
    }
    ],
    "outputs": {
        "vmHostName": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))).dnsSettings.fqdn]"
        },
        "kvName": {
            "type": "string",
            "value": "[variables('kvName')]"
        }
    }
}
